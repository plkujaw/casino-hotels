/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*{box-sizing:border-box}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{border:0;font:inherit;font-size:100%;margin:0;padding:0;vertical-align:baseline}html{scroll-behavior:smooth}a{color:inherit;text-decoration:none}li{list-style:none}.container{margin:0 auto;max-width:1440px;padding:0 10px 0 30px;width:100%}.lazy-load{opacity:0;transform:translateY(-10px);transition:all .3s ease-in-out}.lazy-load.loaded{opacity:1;transform:translateY(0)}@font-face{font-display:swap;font-family:Jost;font-style:normal;font-weight:300;src:url(../../fonts/Jost-Light.woff2) format("woff2"),url(../../fonts/Jost-Light.woff) format("woff"),url(../../fonts/Jost-Light.ttf) format("truetype")}@font-face{font-display:swap;font-family:Jost;font-style:normal;font-weight:700;src:url(../../fonts/Jost-Bold.woff2) format("woff2"),url(../../fonts/Jost-Bold.woff) format("woff"),url(../../fonts/Jost-Bold.ttf) format("truetype")}@font-face{font-display:swap;font-family:Poppins;font-style:normal;font-weight:700;src:url(../../fonts/Poppins-Bold.woff2) format("woff2"),url(../../fonts/Poppins-Bold.woff) format("woff"),url(../../fonts/Poppins-Bold.ttf) format("truetype")}@font-face{font-display:swap;font-family:Poppins;font-style:normal;font-weight:500;src:url(../../fonts/Poppins-Medium.woff2) format("woff2"),url(../../fonts/Poppins-Medium.woff) format("woff"),url(../../fonts/Poppins-Medium.ttf) format("truetype")}@font-face{font-display:swap;font-family:Poppins;font-style:normal;font-weight:600;src:url(../../fonts/Poppins-SemiBold.woff2) format("woff2"),url(../../fonts/Poppins-SemiBold.woff) format("woff"),url(../../fonts/Poppins-SemiBold.ttf) format("truetype")}@font-face{font-display:swap;font-family:Poppins;font-style:normal;font-weight:400;src:url(../../fonts/Poppins-Regular.woff2) format("woff2"),url(../../fonts/Poppins-Regular.woff) format("woff"),url(../../fonts/Poppins-Regular.ttf) format("truetype")}img,svg{user-drag:none;-webkit-user-drag:none;display:block;max-width:100%;-o-object-fit:cover;object-fit:cover;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}img{height:auto}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-text-size-adjust:100%;font-family:Poppins,sans-serif;font-size:1rem;line-height:1.21;text-rendering:optimizeLegibility}a{transition:color .3s ease-in-out}a,p{font-size:1em}p{line-height:1.75}strong{font-weight:600}h1,h2{font-weight:700}h2{font-size:2rem}h3{font-weight:500}@media screen and (min-width:900px){.mobile-show{display:none!important}}.mobile-hide{display:none!important}@media screen and (min-width:900px){.mobile-hide{display:block!important}}@keyframes bounceX{0%{transform:translateX(0)}50%{transform:translateX(5px)}to{transform:translateX(0)}}@keyframes bounceY{0%{transform:translateY(0) rotate(90deg)}50%{transform:translateY(5px) rotate(90deg)}to{transform:translateY(0) rotate(90deg)}}.about{padding:48px 0 52px}.about__inner{display:flex;flex-direction:column;gap:36px;margin-bottom:36px}.about__image img{margin:0 auto;max-width:500px;width:100%}@media screen and (min-width:900px){.about .container{align-items:center;display:flex;gap:120px}.about__inner{width:60%}.about__heading{max-width:520px}.about__text{max-width:680px}.about__image.mobile-hide{width:40%}}.hero{min-height:100vh;position:relative}.hero__content{align-items:center;color:#fff;display:flex;flex-direction:column;gap:27px;justify-content:center;max-width:762px;min-height:100vh;text-align:center}.hero__title{font-size:2.25rem}.hero__subtitle{font-weight:500}.hero__cta:after{transform:rotate(90deg)}.hero__cta:hover:after{animation:bounceY .7s 1}.hero__background{z-index:-1}.hero__background,.hero__background:after{height:100%;left:0;position:absolute;top:0;width:100%}.hero__background:after{background:linear-gradient(89deg,#000,transparent);content:"";display:block}.hero__background img{height:100%;width:100%}@media screen and (min-width:600px){.hero__content{align-items:flex-start;text-align:left}.hero__title{font-size:3.4375rem}}.footer{align-items:center;background-color:#101010;padding:14px 0}.footer .container{padding:0 7%}.footer hr{margin:0;width:100%}.footer__bottom,.footer__bottom .logos,.footer__inner{align-items:center;display:flex;flex-direction:column;gap:30px}.footer__nav{line-height:1.5}.footer__nav ul{display:flex;flex-direction:column;gap:32px;text-align:center}.footer__nav ul li a{color:#f3f4f6}.footer__nav ul li a:hover{color:#fc115c}.footer__bottom{color:#9c9c9c;text-align:center}.footer__bottom img{margin:0 auto}@media screen and (min-width:900px){.footer__bottom,.footer__inner{gap:38px}.footer__nav ul{flex-direction:row}.footer__bottom .logos{flex-direction:row;order:1}.footer__bottom .copyright{order:2}}.info{padding:29px 0 72px}.info__inner{display:flex;flex-direction:column;gap:36px;margin-top:38px}.info__heading{text-align:center}.info__image img{margin:0 auto;max-width:500px;width:100%}.info__content{display:flex;flex-direction:column;gap:38px}.info__content .indicator{background-color:#fc115c;border-radius:100px;color:#fff;display:inline-block;font-size:1.5rem;font-weight:700;padding:.15em 1.2em}.info__content h3{font-size:1.5rem;font-weight:700;padding:16px 0}.info__content p{color:#a7a7a7;font-weight:500}@media screen and (min-width:900px){.info{padding:41px 0 50px}.info__inner{align-items:center;flex-direction:row;gap:10%;margin-top:41px}.info__content{gap:46px;width:60%}}.table{background-color:#f1f1f1;padding:44px 0}.table__heading{text-align:center}.table__heading .date{align-items:center;display:flex;font-size:.75rem;font-style:italic;font-weight:500;gap:4px;justify-content:center;line-height:1.265}.table__main{display:flex;flex-direction:column;gap:14px;margin:0 auto;max-width:1080px}@media screen and (min-width:600px){.table__main{gap:16px}}.btn{align-items:center;background-color:#fc115c;border-radius:100px;display:flex;flex-wrap:nowrap;font-weight:500;justify-content:center;padding:9px 9px 9px 23px;position:relative;width:-moz-fit-content;width:fit-content}.btn:after{background-image:url(../../img/arrow.svg);content:"";display:inline-block;height:30px;margin-left:18px;transition:transform .3s ease-in-out;width:30px}.btn:not(.arrow-down):hover:after{animation:bounceX .7s 1}.heading h3{color:#fc115c;padding-bottom:36px}.table-item{align-items:center;background:#fff;border-radius:5px;box-shadow:2px 10px 54px rgba(84,121,247,.14);display:flex;flex-wrap:wrap;justify-content:space-between;padding:21px 24px 14px;position:relative}.table-item[data-rank="1"]{margin-top:70px}.table-item[data-rank="1"]:before{background-color:#5c33ff;border-radius:20px 20px 0 0;content:"Top Rated Hotel";display:flex;font-size:.875rem;font-weight:500;height:31px;left:50%;margin:0 auto;top:-31px;transform:translateX(-50%);width:217px}.table-item[data-rank="1"]:before,.table-item__rank{align-items:center;color:#fff;justify-content:center;position:absolute}.table-item__rank{background-color:#fc115c;border-radius:5px;display:none;font-family:Jost,sans-serif;font-size:1.6875rem;font-weight:700;height:100%;left:0;top:0;width:32px}.table-item__rating{align-items:center;display:flex;flex-direction:column;order:2}.table-item__rating .star-rating{margin-top:6px;position:relative;text-align:center}.table-item__rating .star-rating .cover{background:#fff;height:100%;mix-blend-mode:color;overflow:hidden;position:absolute;right:0;top:0}.table-item__rating .star-rating span{color:#9c9c9c;font-family:Jost,sans-serif;padding-top:8px}.table-item__rating .score-rating{aspect-ratio:1/1;height:75px;width:75px}.table-item__rating .score-rating svg{display:inline-flex;height:75px;vertical-align:bottom;width:75px}.table-item__rating .score-rating circle{fill:none;stroke-dasharray:0;stroke-width:7px}.table-item__rating .score-rating .meter{fill:none;stroke-width:7px;transform:rotate(-90deg) scaleX(-1);transform-origin:center center}.table-item__rating .score-rating text{fill:#000;font-size:1.5625rem;font-weight:700}.table-item__logo{order:1}.table-item__address{flex:1 0 100%;margin:21px 0 12px;order:3;position:relative;text-align:center}.table-item__address span{color:#9c9c9c;display:block;padding-top:10px}.table-item__address address{font-size:.875rem;padding:10px 0}.table-item__address:after,.table-item__address:before{background-color:#9c9c9c;content:"";height:1px;left:10%;position:absolute;width:80%}.table-item__links{flex:1 0 100%;order:4;text-align:center}.table-item__links .btn{background-color:#27d04c;color:#fff;margin:0 auto 13px}.table-item__links a:not(.btn){color:#9c9c9c;text-decoration:underline}.table-item__links a:not(.btn):hover{color:#000}@media screen and (min-width:900px){.table-item{gap:24px;justify-content:space-between;width:100%}.table-item__rank{display:flex}.table-item__rating{flex-direction:row-reverse;gap:74px;order:3}.table-item__logo{margin-left:32px;width:20%}.table-item__logo img{margin:0 auto}.table-item__address{flex:unset;order:2}.table-item__address:after,.table-item__address:before{all:unset}.table-item__links{flex:unset;order:4}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
